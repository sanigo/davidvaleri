<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>valeri.blog.examples</groupId>
    <artifactId>parent</artifactId>
    <version>2.0</version>
  </parent>
  
  <artifactId>cxf-wss-fips</artifactId>
  <version>1.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>David Valeri's Blog :: Examples :: CXF WS-S FIPS</name>
  
  <properties>
    <spring.version>3.0.4.RELEASE</spring.version>
    <cxf.version>2.3.1</cxf.version>
    <jsse.debug>none</jsse.debug>
    <slf4j.version>1.6.1</slf4j.version>
    <startServer>true</startServer>
  </properties>
  
  <repositories>
    <repository>
      <id>davidvaleri</id>
      <name>David Valeri's Blog Repo</name>
      <url>https://davidvaleri.googlecode.com/svn/repo/</url>
    </repository>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Snapshots</name>
      <url>http://repository.apache.org/snapshots/</url>
    </repository>
  </repositories>
  
  <scm>
    <connection>scm:svn:http://davidvaleri.googlecode.com/svn/projects/examples/cxf-wss-fips/trunk</connection>
    <developerConnection>scm:svn:https://davidvaleri.googlecode.com/svn/projects/examples/cxf-wss-fips/trunk</developerConnection>
    <url>https://code.google.com/p/davidvaleri/source/browse/</url>
  </scm>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.15</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>${cxf.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-ws-security</artifactId>
      <version>${cxf.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk15</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-testutils</artifactId>
      <version>${cxf.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
     <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>./target/generated-resources/</directory>
      </resource>
      <resource>
        <directory>./src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[2.2.1],[3.0]</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[1.6.0,1.7.0)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!-- Download the WSDL we want to generate source code from. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <mkdir dir="./target/generated-resources/wsdl" />
                <!-- Get the WSDL. -->
                <get src="https://svn.apache.org/repos/asf/cxf/tags/cxf-2.2.10/distribution/src/main/release/samples/wsdl_first/wsdl/CustomerService.wsdl" dest="./target/generated-resources/wsdl/CustomerService.wsdl" verbose="true" usetimestamp="true" />
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Generate the source code from the WSDL. -->
      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-codegen-plugin</artifactId>
        <version>${cxf.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <wsdlOptions>
                <wsdlOption>
                  <wsdl>./target/generated-resources/wsdl/CustomerService.wsdl</wsdl>
                  <extraargs>
                    <extraarg>-verbose</extraarg>
                  </extraargs>
                </wsdlOption>
              </wsdlOptions>
            </configuration>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-pkcs11-files</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/pkcs11</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/test/pkcs11</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>nss-*.cfg</include>
                  </includes>
                </resource>
              </resources>              
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <forkMode>always</forkMode>
          <systemPropertyVariables>
            <startServer>${startServer}</startServer>
            <javax.net.debug>${jsse.debug}</javax.net.debug>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>client</id>
      <properties>
        <startServer>false</startServer>
      </properties>
      <build>
        <defaultGoal>test</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>server</id>
      <build>
        <defaultGoal>process-test-classes</defaultGoal>
        <plugins>
          <!-- Note that this plug-in is used due to MEXEC-24 in the Maven 2 Exec Plug-in 
               and the need to start the server in an external JVM. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>process-test-classes</phase>
                <configuration>
                  <tasks>
                    <java classname="valeri.blog.examples.cxf_wss_fips.CustomerServiceRunner" fork="true" classpathref="maven.test.classpath" output="target/surefire-reports/valeri.blog.examples.cxf_wss_fips.CustomerServiceRunner.out">
                      <arg value="classpath:valeri/blog/examples/cxf_wss_fips/service-context.xml" />
                      <sysproperty key="javax.net.debug" value="${jsse.debug}" />
                    </java>    
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>